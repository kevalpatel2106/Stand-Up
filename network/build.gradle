/*
 *  Copyright 2017 Keval Patel.
 *
 *  Licensed under the GNU General Public License, Version 3.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'com.android.library'
apply plugin: 'jacoco-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../gradle/config.gradle'
apply from: '../gradle/deps.gradle'

android {
    signingConfigs {
        //This are th play store signing config.
        playStore {
            if (System.getenv("IS_CI_BUILD") == "true") {
                //It is CI build, load it from the environment variables.
                //See circle.yml file.
                storeFile file("../misc/keystore.jks")
                storePassword System.getenv("KEY_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("ALIAS_PASSWORD")
            } else {
                keyAlias keystore_alias
                keyPassword keystore_password
                storeFile file(keystore_file)
                storePassword keystore_aliaspassword
            }
        }
    }

    compileSdkVersion buidlConfig.compile
    buildToolsVersion buidlConfig.buildToolVersion

    compileOptions {
        sourceCompatibility javaCompatibility.sourceCompatibility
        targetCompatibility javaCompatibility.targetCompatibility
    }

    defaultConfig {
        //sdks
        minSdkVersion buidlConfig.min
        targetSdkVersion buidlConfig.target

        //strip other than english resources
        resConfigs "en"

        consumerProguardFiles proguardConfig.proguardPath, proguardConfig.removeLogs

        testInstrumentationRunner "com.kevalpatel2106.testutils.CustomTestRunner"
        defaultPublishConfig "debug"
    }

    buildTypes {
        release {
            signingConfig signingConfigs.playStore
        }
        debug {
            testCoverageEnabled true
            signingConfig signingConfigs.playStore
        }
    }

    packagingOptions packageExcludes
    lintOptions lintOption
    aaptOptions aaptOption
    dexOptions dexOption
}

task grantAnimationPermission(type: Exec, dependsOn: 'installDebug') {
    // or install{productFlavour}{buildType}
    commandLine "adb shell pm grant $android.defaultConfig.applicationId android.permission.SET_ANIMATION_SCALE".split(' ')
}

tasks.whenTaskAdded { task ->
    if (task.name.startsWith('connectedAndroidTest')) {
        task.dependsOn grantAnimationPermission
    }
}

dependencies {
    implementation project(':base')
    implementation project(':utils')
    testImplementation project(':test-utils')
    androidTestImplementation project(':test-utils')

    implementation ide.kotlin

    //Support
    implementation supportLib.appCompat
    implementation supportLib.supportv4

    //GSON
    api otherLib.gson

    //Retrofit
    api retrofitLib.retrofit
    implementation retrofitLib.gsonPlugin
    implementation retrofitLib.rxPlugin
    implementation retrofitLib.logger

    //Rx
    implementation rxLib.rxJava
    implementation (rxLib.rxAndroid, excludeGrp)

    //Loggers
    debugApi(debugLibs.shetho, excludeGrp)
    implementation(debugLibs.shethoOkhttp, excludeGrp)
    implementation(debugLibs.timber, excludeGrp)
}