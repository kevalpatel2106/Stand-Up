/*
 *  Copyright 2018 Keval Patel.
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  http://www.apache.org/licenses/LICENSE-2.0
 *
 *   Unless required by applicable law or agreed to in writing, software
 *   distributed under the License is distributed on an "AS IS" BASIS,
 *   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *   See the License for the specific language governing permissions and
 *   limitations under the License.
 *
 */

ext {
    buidlConfig = [
            min             : 21,
            target          : 26,
            compile         : 26,
            buildToolVersion: '27.0.2',
            applicationId   : 'com.kevalpatel2106.standup'
    ]

    versionConfig = [
            versionMajor: 0,
            versionMinor: 1,
            versionCode : 1
    ]

    proguardConfig = [
            proguardPath: '../misc/proguard-rules.pro',
            removeLogs  : '../misc/proguard-rules-remove-logs.pro',
    ]

    packageExcludes = {
        exclude 'LICENSE.txt'
        exclude 'META-INF/DEPENDENCIES'
        exclude 'META-INF/ASL2.0'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/rxjava.properties'
        exclude 'protobuf.meta'
    }

    lintOption = {
        abortOnError false
        htmlReport true
        xmlReport true
        textReport true
        disable 'InvalidPackage'
    }

    aaptOption = {
        cruncherProcesses 4
    }

    compileOption = {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    dokkaConfig = {
        outputFormat = 'javadoc'
        outputDirectory = "./doc"
        jdkVersion = 8 // Used for linking to JDK

        // Use to include or exclude non public members.
        includeNonPublic = false

        // Do not output deprecated members. Applies globally, can be overridden by packageOptions
        skipDeprecated = false

        // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
        reportNotDocumented = true

        skipEmptyPackages = true // Do not create index pages for empty packages
    }

    dexcountOptions = {
        format = "list"
        includeClasses = false
        includeClassCount = false
        includeFieldCount = true
        includeTotalMethodCount = false
        orderByMethodCount = false
        verbose = false
        maxTreeDepth = Integer.MAX_VALUE
        teamCityIntegration = false
        teamCitySlug = null
        runOnEachPackage = true
        maxMethodCount = 1_10_000
    }

    libDefaultConfig = {
        //sdks
        minSdkVersion buidlConfig.min
        targetSdkVersion buidlConfig.target

        //strip other than english resources
        resConfigs "en"

        consumerProguardFiles proguardConfig.proguardPath, proguardConfig.removeLogs

        testInstrumentationRunner "com.kevalpatel2106.testutils.CustomTestRunner"
    }

    adbOption = {
        timeOutInMs 10 * 60 * 1000  // 10 minutes
    }

    signingConfig = {
        //This are th play store signing config.
        playStore {
            keyAlias RELEASE_KEYSTORE_ALIAS
            keyPassword RELEASE_KEYSTORE_PASSWORD
            storeFile file(RELEASE_KEYSTORE_FILE)
            storePassword RELEASE_KEYSTORE_ALIASPASSWORD
        }
        debugKey {
            keyAlias KEYSTORE_ALIAS
            keyPassword KEYSTORE_PASSWORD
            storeFile file(KEYSTORE_FILE)
            storePassword KEYSTORE_ALIASPASSWORD
        }
    }

    dexOption = {
        preDexLibraries true
        maxProcessCount 6
    }

    testOption = {
        unitTests.all {
            // set heap size for the test JVM(s)
            minHeapSize = "1024m"
            maxHeapSize = "1596m"
            testLogging {
                events 'passed', 'skipped', 'failed'
            }
        }
    }

    kotlinOption = {
        jvmTarget = "1.8"
        experimental {
            coroutines 'enable'
        }
    }
}
