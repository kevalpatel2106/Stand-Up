/*
 *  Copyright 2017 Keval Patel.
 *
 *  Licensed under the GNU General Public License, Version 3.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *  https://www.gnu.org/licenses/gpl-3.0.en.html
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */

apply plugin: 'com.android.application'
apply plugin: 'jacoco-android'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'

apply from: '../gradle/config.gradle'
apply from: '../gradle/deps.gradle'

android {
    signingConfigs {
        //This are th play store signing config.
        playStore {
            if (System.getenv("IS_CI_BUILD") == "true") {
                //It is CI build, load it from the environment variables.
                //See circle.yml file.
                storeFile file("../misc/keystore.jks")
                storePassword System.getenv("KEY_PASSWORD")
                keyAlias System.getenv("KEY_ALIAS")
                keyPassword System.getenv("ALIAS_PASSWORD")
            } else {
                //If this is the local build, load it from the keystore.properties file
                File signFile = rootProject.file('./misc/keystore.properties')
                if (signFile.exists()) {
                    Properties props = new Properties()
                    props.load(new FileInputStream(signFile))

                    keyAlias props['keystore.alias']
                    keyPassword props['keystore.password']
                    storeFile file(props['keystore.file'])
                    storePassword props['keystore.aliaspassword']
                } else {
                    throw new GradleException("keystore.properties file not found.")
                }
            }
        }
    }

    compileSdkVersion buidlConfig.compile
    buildToolsVersion buidlConfig.buildToolVersion

    compileOptions {
        sourceCompatibility javaCompatibility.sourceCompatibility
        targetCompatibility javaCompatibility.targetCompatibility
    }

    defaultConfig {
        applicationId buidlConfig.applicationId
        multiDexEnabled true

        //sdks
        minSdkVersion buidlConfig.min
        targetSdkVersion buidlConfig.target

        //Version config
        versionName String.format('%d.%d', versionConfig.versionMajor, versionConfig.versionMinor)
        versionCode versionConfig.versionCode

        //strip other than english resources
        resConfigs "en"

        testInstrumentationRunner "com.kevalpatel2106.standup.CustomTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), proguardConfig.proguardPath
            debuggable false
            jniDebuggable false
            renderscriptDebuggable false
            signingConfig signingConfigs.playStore
            pseudoLocalesEnabled false
            zipAlignEnabled true
        }
        debug {
            testCoverageEnabled true
            debuggable true
            jniDebuggable true
            renderscriptDebuggable false
            signingConfig signingConfigs.playStore
            minifyEnabled false
            zipAlignEnabled true
        }
    }

    packagingOptions packageExcludes
    lintOptions lintOption
    aaptOptions aaptOption
    dexOptions dexOption
}

dependencies {
    implementation project(':base')
    implementation project(':utils')
    implementation project(':network')
    implementation project(':facebook-auth')
    implementation project(':google-auth')
    testImplementation project(':test-utils')
    androidTestImplementation project(':test-utils')

    implementation ide.kotlin
    implementation ide.constrainlayout

    //Butter knife
    implementation(butterKnifeLib.butterKnife, excludeGrp)
    kapt(butterKnifeLib.annotationProcessor, excludeGrp)

    //Loggers
    implementation(otherLib.timber, excludeGrp)

    //Support
    implementation supportLib.appCompat
    implementation supportLib.supportv4
    implementation(supportLib.recyclerView, excludeGrp)
    implementation(supportLib.cardView, excludeGrp)
    implementation supportLib.multidex
    implementation supportLib.design

    //Arch component
    implementation archComponent.lifecycle
    kapt archComponent.lifecycleAnotations

    //Rx
    implementation rxLib.rxJava
    implementation(rxLib.rxAndroid, excludeGrp)
}